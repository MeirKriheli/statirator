"""Handles cli arguments"""
import os
import sys
import errno
import logging


SETTINGS_TEMPLATE = """# Generated by statirator
import os

# directories setup

ROOT_DIR = os.path.abspath(os.path.dirname(__file__))
SOURCE_DIR = os.path.join(ROOT_DIR, '{{ source }}')
BUILD_DIR = os.path.join(ROOT_DIR, '{{ build }}')

# languages setup

LANGUAGE_CODE = '{{default_lang}}'
_ = lambda s:s

LANGUAGES = ({% for code, name in languages %}
    ('{{code}}', _('{{ name }}')),
{% endfor %})
"""


def init(args):
    """Create the initial site, populating code and templates"""

    #site = cls(name=args.name, root=args.directory,
    #        source=args.source, build=args.build,
    #        languages=args.languages)
    #site.create()
    logging.info("Initializing directory  %s", args.directory)
    source_dir = os.path.join(args.directory, args.source)
    build_dir = os.path.join(args.directory, args.build)
    try:
        os.makedirs(source_dir)
        os.makedirs(build_dir)
    except OSError as e:
        if e.errno != errno.EEXIST:
            raise
        if args.force:
            logging.debug('Target directories exists, continuing as force '
                          'was set ')
        else:
            logging.error('Target directories already exist, aborting')
            sys.exit(1)

    # template context
    from django.conf.global_settings import LANGUAGES

    ctx = {
        'source': args.source,
        'build': args.build,
        'default_lang': args.languages[0],
        'languages': [l for l in LANGUAGES if l[0] in args.languages],
    }

    from django.template import Context, Template
    from django.conf import settings

    settings.configure()
    print Template(SETTINGS_TEMPLATE).render(Context(ctx))


def _site_from_config():

    sys.path.append(os.path.abspath(os.getcwd()))
    from config import site

    return site


def generate(args):
    """generate the site.

    should be run from site's root (location of config.py)"""

    site = _site_from_config()
    site.generate()


def serve(args):
    """Serve the site"""

    logging.error('Not implemented')
    sys.exit(1)
